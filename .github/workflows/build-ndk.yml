name: NDK build

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"
    branches:
      - 'master'
      - 'dev/*'
      - 'feat/*'
      - 'fix/*'
    paths-ignore:
      - '**.yml'
      - '!.github/workflows/build-ndk.yml'
      - '**.json'
      - '!qpm.json'
      - '**.txt'
      - '!CMakeLists.txt'
      - '**.ps1'
      - '!build.ps1'
      - '**.md'
      - '.gitignore'
  pull_request:
    branches: master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      name: Checkout
      with:
        submodules: true
        lfs: true

    - uses: seanmiddleditch/gha-setup-ninja@v3

    # Use canary NDK to avoid lesser known compile bugs
    - name: Setup canary NDK
      id: setup-ndk
      uses: ./.github/actions/canary-ndk

    - name: Create ndkpath.txt
      run: |
        echo ${{ steps.setup-ndk.outputs.ndk-path }} > ${GITHUB_WORKSPACE}/ndkpath.txt
        cat ${GITHUB_WORKSPACE}/ndkpath.txt

    # get version from pushed tag
    - name: Extract version
      if: startsWith(github.ref, 'refs/tags/v')
      id: version
      run: |
        echo "TAG=${GITHUB_REF#refs/tags/}" >> ${GITHUB_OUTPUT}
        echo "VERSION=${GITHUB_REF#refs/tags/v}" >> ${GITHUB_OUTPUT}

    # if we don't have a tag, don't do anything special
    - name: Setup qpm
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      uses: Fernthedev/qpm-action@main
      with:
        workflow_token: ${{ secrets.GITHUB_TOKEN }}
        restore: true
        cache: true
        publish: false

    # if we do have a tag, add the version for the build
    - name: Setup qpm
      if: startsWith(github.ref, 'refs/tags/v')
      uses: Fernthedev/qpm-action@main
      with:
        workflow_token: ${{ secrets.GITHUB_TOKEN }}
        restore: true
        cache: true
        publish: false
        version: ${{ steps.version.outputs.VERSION }}
        tag: ${{ steps.version.outputs.TAG }}

    - name: Build & Create Qmod
      run: |
        cd ${GITHUB_WORKSPACE}
        qpm s build

    - name: Upload artifact test-1
      uses: actions/upload-artifact@v2
      with:
        name: libconditional-dependencies-test-1.so
        path: ./build/libconditional-dependencies-test-1.so
        if-no-files-found: error

    - name: Upload artifact test-2
      uses: actions/upload-artifact@v2
      with:
        name: libconditional-dependencies-test-2.so
        path: ./build/libconditional-dependencies-test-2.so
        if-no-files-found: error

  publish:
    runs-on: ubuntu-latest

    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    steps:
    - uses: actions/checkout@v2
      name: Checkout
      with:
        submodules: true
        lfs: true

    # get version from pushed tag
    - name: Extract version
      id: version
      run: |
        echo "TAG=${GITHUB_REF#refs/tags/}" >> ${GITHUB_OUTPUT}
        echo "VERSION=${GITHUB_REF#refs/tags/v}" >> ${GITHUB_OUTPUT}

    # if we have a tag, we are making a qpm release
    - name: Setup qpm for release
      uses: Fernthedev/qpm-action@main
      with:
        workflow_token: ${{ secrets.GITHUB_TOKEN }}
        restore: true
        cache: true
        publish: true
        publish_token: ${{ secrets.QPM_KEY }}
        version: ${{ steps.version.outputs.VERSION }}
        tag: ${{ steps.version.outputs.TAG }}
        qpm_release_bin: false
        qpm_debug_bin: false

    # if we had a tag, we should make a release
    - name: Create release artifacts
      id: upload_file_release
      uses: softprops/action-gh-release@v0.1.15
      with:
        tag_name: ${{ github.event.inputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
